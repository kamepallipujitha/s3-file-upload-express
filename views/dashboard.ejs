<!DOCTYPE html>
<html>
<head>
  <title>Dashboard</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: url("uploadimg.jpg") no-repeat center center fixed;
      background-size: cover;
      min-height: 100vh;
      margin: 0;
      padding: 0;
      color: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }

    h2 {
  font-size: 2.5em;
  margin-bottom: 30px;
  text-shadow: 0 0 15px rgba(0, 255, 255, 0.8);
  animation: floatText 3s ease-in-out infinite, pulseGlow 2s infinite;
}

@keyframes floatText {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0px); }
}

@keyframes pulseGlow {
  0% {
    text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  }
  100% {
    text-shadow: 0 0 20px rgba(0, 255, 255, 1);
  }
}
    #uploadForm, #fileTable {
      margin-top: 25px;
      display: none;
      background: rgba(255, 255, 255, 0.05);
      border-radius: 16px;
      padding: 20px;
      max-width: 600px;
      width: 90%;
      backdrop-filter: blur(12px);
      box-shadow: 0 0 15px rgba(0, 255, 255, 0.2);
    }

    input[type="file"] {
      color: white;
      margin-bottom: 10px;
    }

    #fileTable {
  display: none;
  margin-top: 40px;
  padding: 25px;
  width: 90%;
  max-width: 600px;
  border-radius: 16px;
  background: rgba(255, 255, 255, 0.06);
  backdrop-filter: blur(20px);
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.12);
  overflow: hidden;
  transition: all 0.4s ease;
  margin-left: auto;
  margin-right: auto;
}

#fileTable h3 {
  text-align: center;
  margin-bottom: 20px;
  color: #ffffff;
  font-size: 1.5em;
  text-shadow: 0 0 8px #00ffff;
}

table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  border-radius: 12px;
  overflow: hidden;
}

th, td {
  padding: 12px;
  text-align: center;
  font-size: 0.92em;
  color: #ffffff;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

th {
  background: rgba(0, 255, 255, 0.12);
  color: #00ffff;
  font-size: 1em;
  text-shadow: 0 0 5px #00ffff;
}

tr:last-child td {
  border-bottom: none;
}

tr:hover {
  background: rgba(255, 255, 255, 0.07);
  transition: 0.3s ease;
}

a {
  color: #00ffff;
  font-weight: 500;
  text-decoration: none;
}

a:hover {
  color: #ffffff;
  text-decoration: underline;
}



    #uploadMsg {
      margin-top: 10px;
      color: #00ff99;
      font-weight: bold;
    }
.button-wrapper {
  display: flex;
  justify-content: center;
  margin-top: 30px;
}

.button-container {
  background: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 30px 50px;
  box-shadow: 0 0 25px rgba(0, 255, 255, 0.3), inset 0 0 10px rgba(0, 255, 255, 0.2);
  border: 2px solid rgba(0, 255, 255, 0.4);
}
.button-container button {
  background: linear-gradient(135deg, #00ffffaa, #0055ff88);
  border: 2px solid #00e6e6;
  color: #ffffff;
  padding: 12px 28px;
  margin: 10px;
  font-size: 1rem;
  border-radius: 30px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow:
    0 0 10px rgba(0, 255, 255, 0.6),
    0 0 20px rgba(0, 255, 255, 0.3),
    inset 0 0 5px rgba(255, 255, 255, 0.2);
}
.button-container button:hover {
  background: linear-gradient(135deg, #00ccff, #0033ff);
  box-shadow:
    0 0 15px #00ffff,
    0 0 30px #00ffff,
    inset 0 0 10px #ffffffaa;
  transform: scale(1.05);
}
  #uploadMsg {
  margin-top: 10px;
  font-weight: bold;
  font-size: 1.1em;
  text-align: center;
}
.typed-text {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  border-right: 2px solid #00ffff;
  font-size: 2em;
  color: #3322b1;
  text-shadow: 0 0 20px #00ffff, 0 0 40px #00ffff;
  animation: typing 2.5s steps(30, end), blink 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink {
  50% { border-color: transparent }
}
button {
  padding: 8px 16px;
  border-radius: 20px;
  border: none;
  background: #ff4d4d;
  color: white;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
}

button:hover {
  background: #ff1a1a;
}

  </style>
</head>
<body>
  <h2><span class="typed-text">Welcome, <%= username %>!</span></h2>


<div class="button-wrapper">
  <div class="button-container">
    <button onclick="showUpload()">Upload File</button>
    <a href="/files"><button>View Files</button></a>
</div>
  <p id="uploadMsg" class="upload-message"></p>
</div>
  <form id="uploadForm" method="POST" enctype="multipart/form-data">
    <input type="file" name="file" required />
    <button type="submit">Upload</button>
    <p id="uploadMsg"></p>
  </form>

  <div id="fileTable">
    <h3>Your Files</h3>
    <table>
      <thead>
        <tr>
          <th>File Name</th>
          <th>Download Link</th>
          <th>Delete</th>

        </tr>
      </thead>
      <tbody id="filesBody"></tbody>
    </table>
  </div>

  <script>
    function showUpload() {
      document.getElementById('uploadForm').style.display = 'block';
      document.getElementById('fileTable').style.display = 'none';
      document.getElementById('uploadMsg').innerText = '';
    }


  function viewFiles() {
    fetch('/files')
      .then(response => response.json())
      .then(files => {
        const tbody = document.getElementById('filesBody');
        tbody.innerHTML = '';
        files.forEach(file => {
          const row = `<tr>
          <td>${file.name}</td>
          <td><a href="${file.url}" target="_blank">Download</a></td>
         <td><button onclick="deleteFile('${file.name}')">Delete</button></td>
         </tr>`;
          tbody.innerHTML += row;
        });
        document.getElementById('fileTable').style.display = 'block';
        document.getElementById('uploadForm').style.display = 'none';
      });
    }
    function deleteFile(filename) {
  if (confirm(`Are you sure you want to delete "${filename}"?`)) {
    fetch(`/delete/${filename}`, {
      method: 'DELETE'
    })
    .then(res => {
      if (res.ok) {
        alert("File deleted successfully!");
        viewFiles(); 
      } else {
        throw new Error("Failed to delete file.");
      }
    })
    .catch(err => {
      alert("An error occurred while deleting.");
      console.error(err);
    });
  }
}


    document.getElementById('uploadForm').addEventListener('submit', function (e) {
  e.preventDefault();
  const formData = new FormData(this);
  fetch('/upload', {
    method: 'POST',
    body: formData
  })
  .then(res => {
    if (res.ok) {
      alert(' File uploaded successfully!');
      this.reset();
      viewFiles(); 
    } else {
      throw new Error('Upload failed');
    }
  })
  .catch(err => {
    alert(' Upload failed. Please try again.');
  });
});

  </script>
</body>
</html>
